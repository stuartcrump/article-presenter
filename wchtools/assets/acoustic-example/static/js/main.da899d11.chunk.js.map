{"version":3,"sources":["serviceWorker.js","constants.js","components/Header/index.jsx","components/Tag/index.jsx","components/Form/index.jsx","views/Article/index.jsx","components/Headline/index.jsx","components/Card/index.jsx","views/Category/index.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","taxonomy","headlineBackground","asJSON","baseURL","tenantURL","HeaderComponent","categories","useState","menuState","setMenuState","history","useHistory","handleMenuItemClick","path","sideMenu","push","RenderMenuItems","map","id","name","HeaderMenuItem","onClick","key","HeaderContainer","render","aria-label","HeaderMenuButton","isActive","HeaderName","prefix","HeaderNavigation","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","TagComponent","title","to","Tag","className","role","type","FormComponent","isValidMail","setValidMail","mail","setMail","Form","onSubmit","event","isExcluded","includes","data","FormData","target","preventDefault","console","log","fetch","method","body","mode","then","res","FormGroup","invalid","legendText","message","messageText","TextInput","disabled","invalidText","labelText","onChange","placeholder","value","ToggleSmall","defaultToggled","labelA","labelB","onToggle","Button","kind","tabIndex","Article","elements","articleImage","image","url","articleText","tags","article","setArticle","fetched","setFetched","error","setError","useEffect","a","articleId","pathname","replace","deliveryURL","json","result","catch","err","Tile","style","background","backgroundSize","dangerouslySetInnerHTML","__html","tag","index","Loading","description","small","withOverlay","HeadlineComponent","CardComponent","thumbnail","text","Category","params","documents","numFound","articles","setArticles","queryURL","startsWith","Headline","document","Card","substring","leadImage","renderArticles","App","setCategories","categoriesURL","exact","props","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da899d11.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const hubId = '859f2008-a40a-4b92-afd0-24bb44d10124'; // Enter your content hub ID\nconst taxonomy = `ForReactApp`; // Enter your taxonomy name\nconst headlineBackground = 'https://cdn.pixabay.com/photo/2015/09/04/23/42/guitar-923229_960_720.jpg'; // headline component background Image\nconst secondlineBackground = 'https://cdn.pixabay.com/photo/2015/09/04/23/42/guitar-923229_960_720.jpg'; // headline component background Image\n\nconst asJSON = '&fl=document:[json]';\nconst baseURL = `https://my12.digitalexperience.ibm.com/`;\nconst tenantURL = `${baseURL}/api/${hubId}/`;\nexport { baseURL, tenantURL, taxonomy, asJSON, headlineBackground, secondlineBackground };\n","import React, { useState } from 'react';\nimport {\n  HeaderName,\n  HeaderContainer,\n  Header as CarbonHeader,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  HeaderNavigation,\n  SideNav,\n  SideNavItems,\n  HeaderSideNavItems\n} from 'carbon-components-react';\nimport { useHistory } from 'react-router-dom';\n\nfunction HeaderComponent({ categories }) {\n  const [menuState, setMenuState] = useState(false);\n  let history = useHistory();\n\n  const handleMenuItemClick = (path, sideMenu) => {\n    history.push(`/category/${path}`);\n\n    if (sideMenu) {\n      setMenuState(!menuState);\n    }\n  };\n\n  function RenderMenuItems(sideMenu) {\n    return categories.map(({ id, name }) => {\n      return (\n        <HeaderMenuItem onClick={() => handleMenuItemClick(name, sideMenu)} key={id}>\n          {name}\n        </HeaderMenuItem>\n      );\n    });\n  }\n\n  return (\n    <HeaderContainer\n      render={() => (\n        <>\n          <CarbonHeader aria-label='Acoustic Header'>\n            <HeaderMenuButton aria-label='Menu State Handler' onClick={() => setMenuState(!menuState)} isActive={menuState} />\n            <\n            // @ts-ignore\n            HeaderName prefix='Acoustic' onClick={() => history.push('/')}>\n              Workshop\n            </HeaderName>\n            <HeaderNavigation aria-label='Acoustic'>{RenderMenuItems(false)}</HeaderNavigation>\n            <SideNav aria-label='Side navigation' expanded={menuState} isPersistent={false}>\n              <SideNavItems>\n                <HeaderSideNavItems>{RenderMenuItems(true)}</HeaderSideNavItems>\n              </SideNavItems>\n            </SideNav>\n          </CarbonHeader>\n        </>\n      )}\n    />\n  );\n}\n\nexport default HeaderComponent;\n","import React from 'react';\nimport { Tag } from 'carbon-components-react';\nimport { Link } from 'react-router-dom';\nimport './style.scss';\n\nfunction TagComponent({ title }) {\n  return (\n    <Link to={`/tag/${title}`}>\n      <Tag className='tag' role='listitem' type='blue'>\n        {title}\n      </Tag>\n    </Link>\n  );\n}\n\nexport default TagComponent;\n","import React, { useState } from 'react';\nimport { Form, FormGroup, TextInput, Button, ToggleSmall } from 'carbon-components-react';\nimport './style.scss';\n\nfunction FormComponent({ name }) {\n  const [isValidMail, setValidMail] = useState(false);\n  const [mail, setMail] = useState('');\n\n  const handleSubmit = event => {\n    const excludedDomain = 'yahoo.uk';\n    const isExcluded = mail.includes(excludedDomain);\n    const data = new FormData(event.target);\n    event.preventDefault();\n\n    if (mail) {\n      setValidMail(isExcluded);\n      if (!isExcluded) {\n        // handle submission\n        console.log('Form Submitted', data, event.target);\n\n        fetch('http://www.pages00.net/orgformikebean/UBXTestSignUp/SignUp', {\n          method: 'POST',\n          body: data,\n          mode: 'no-cors'\n        }).then(res => console.log(res.body));\n      }\n    } else {\n      setValidMail(true);\n    }\n  };\n\n  return (\n    <Form className='article-form-element' onSubmit={handleSubmit}>\n      <FormGroup className='form-group' invalid={false} legendText='' message={false} messageText=''>\n        <div className='bx--row form-input-row'>\n          <TextInput\n            name='Forename'\n            className='name-input'\n            disabled={false}\n            id='article-form-name'\n            invalid={false}\n            invalidText=''\n            labelText='Name'\n            onChange={function noRefCheck() {}}\n            onClick={function noRefCheck() {}}\n            placeholder='Input your full name'\n            type='text'\n          />\n        </div>\n\n        <div className='bx--row form-input-row'>\n          <TextInput\n            name='Email'\n            className='email-input'\n            id='test2'\n            invalid={isValidMail}\n            invalidText=''\n            labelText='Email'\n            placeholder='Input your email address'\n            type='email'\n            onChange={event => setMail(event.target.value)}\n          />\n        </div>\n\n        <div className='bx--row form-input-row'>\n          <div className='bx--col-sm-2 consent-toggle-wrapper'>\n            <ToggleSmall\n              name='sp_exp'\n              value='yes'\n              aria-label='Toggle'\n              className='some-class'\n              defaultToggled={true}\n              id='consent-toggle'\n              labelA=\"I don't consent\"\n              labelB='I consent'\n              onToggle={function noRefCheck() {}}\n            />\n          </div>\n          <div className='bx--col-sm-2 signup-button-wrapper'>\n            <Button className='signup-button' kind='primary' tabIndex={0} type='submit'>\n              SIGN UP\n            </Button>\n          </div>\n        </div>\n        {/* Added for Campaign, supports the webform */}\n        <input type='hidden' name='formSourceName' value='StandardForm'></input>\n        <input type='hidden' name='article' value={name}></input>\n      </FormGroup>\n    </Form>\n  );\n}\n\nexport default FormComponent;\n","import React, { useEffect, useState } from 'react';\nimport { Tile, Loading } from 'carbon-components-react';\nimport { tenantURL, baseURL } from '../../constants';\nimport TagComponent from '../../components/Tag/';\nimport FormComponent from '../../components/Form/';\nimport './style.scss';\n\nfunction Article() {\n  const [article, setArticle] = useState({\n    name: 'Default Name',\n    elements: {\n      articleImage: { value: { image: { url: '' } } },\n      articleText: { value: 'Default Text' }\n    },\n    tags: []\n  });\n  const [fetched, setFetched] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const articleId = window.location.pathname.replace('/article/', '');\n      const deliveryURL = `${tenantURL}delivery/v1/content/${articleId}&fl=document:[json]`;\n      const result = await fetch(deliveryURL);\n\n      result\n        .json()\n        .then(result => {\n          setArticle(result);\n          setFetched(true);\n        })\n        .catch(err => {\n          setError(err.message);\n          setFetched(true);\n        });\n    })();\n  }, [fetched]);\n\n  if (fetched) {\n    const { name, elements, tags } = article;\n\n    return error ? (\n      <h2>{error}</h2>\n    ) : (\n      <div className='bx--grid bx--grid--full-width'>\n        <Tile className='article'>\n          <div\n            className='bx--row article-image'\n            style={{\n              background: `url(${baseURL}${elements.articleImage.value.image.url}) no-repeat center center`,\n              backgroundSize: 'cover'\n            }}\n          ></div>\n\n          <div className='bx--row article-heading'>\n            <div className='bx--col-sm-3 bx--col-lg-3'>\n              <h2>{name}</h2>\n            </div>\n          </div>\n\n          <div className='bx--row article-text'>\n            <div className='bx--col-sm-12 bx--col-lg-12'>\n              <p dangerouslySetInnerHTML={{ __html: elements.articleText.value }}></p>\n            </div>\n          </div>\n          <div className='bx--row article-form'>\n            <FormComponent name={name} />\n          </div>\n\n          <div className='bx--row article-tags'>\n            {tags.map((tag, index) => (\n              <TagComponent title={tag} key={`${index}-${tag}`} />\n            ))}\n          </div>\n        </Tile>\n      </div>\n    );\n  } else {\n    return <Loading description='loading indicator' small={false} withOverlay={false} />;\n  }\n}\n\nexport default Article;\n","import React from 'react';\nimport { Tile } from 'carbon-components-react';\nimport { headlineBackground } from '../../constants';\nimport './style.scss';\n\nfunction HeadlineComponent() {\n  return (\n    <div className='bx--col-lg-16'>\n      <Tile\n        className='headline'\n        style={{\n          background: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${headlineBackground}) no-repeat center center`,\n          backgroundSize: 'cover'\n        }}\n      >\n        <h3>Default Headline</h3>\n        <p>\n          Carbon provides styles and components in Vanilla, React, Angular, and Vue for anyone building on the web. Carbon provides styles\n          and components in Vanilla, React, Angular...\n        </p>\n      </Tile>\n    </div>\n  );\n}\n\nexport default HeadlineComponent;\n","import React from 'react';\nimport { Tile } from 'carbon-components-react';\nimport { Link } from 'react-router-dom';\nimport './style.scss';\n\nfunction CardComponent({ id, thumbnail, text, title }) {\n  return (\n    <Link to={`/article/${id}`}>\n      <Tile className='card'>\n        <div className='bx--row'>\n          <div className='bx--col-sm-1 bx--col-lg-1 card-image-col'>\n            <div\n              className='card-image'\n              style={{\n                background: `url(${thumbnail}) no-repeat center center / cover`\n              }}\n            ></div>\n          </div>\n\n          <div className='bx--col-sm-3 bx--col-lg-11'>\n            <h4>{title}</h4>\n\n            <p dangerouslySetInnerHTML={{ __html: text }} className='card-text'></p>\n          </div>\n        </div>\n      </Tile>\n    </Link>\n  );\n}\n\nexport default CardComponent;\n","import React, { useState, useEffect } from 'react';\nimport HeadlineComponent from '../../components/Headline/';\nimport CardComponent from '../../components/Card/';\nimport { Loading } from 'carbon-components-react';\nimport { tenantURL, baseURL, asJSON } from '../../constants';\nimport './style.scss';\n\nfunction Category({\n  match: {\n    params: { id },\n    path\n  }\n}) {\n  const [articles, setArticles] = useState({\n    documents: [],\n    numFound: 0\n  });\n  const [fetched, setFetched] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const deliveryURL = `${tenantURL}delivery/v1/search`;\n      let queryURL;\n\n      if (path.startsWith('/tag')) {\n        queryURL = `${deliveryURL}?q=classification:content%20AND%20tags:\"${id}\"&fl=name&fl=classification&fl=tags${asJSON}`;\n      } else {\n        queryURL = `${deliveryURL}?q=*:*&fl=name,document,id,type&fq=classification:content&fq=categoryLeaves:\"${id || 'Home'}\"${asJSON}`;\n      }\n\n      const result = await fetch(queryURL);\n\n      result\n        .json()\n        .then(res => {\n          setArticles(res);\n          setFetched(true);\n        })\n        .catch(err => {\n          setError(err.message);\n          setFetched(true);\n        });\n    })();\n  }, [id, path]);\n\n  const renderArticles = () => {\n    const { documents, numFound } = articles;\n\n    if (error) {\n      return <h2>{error}</h2>;\n    } else if (numFound > 0) {\n      return documents.map(({ document }) => {\n        const { id, name, elements } = document;\n\n        return (\n          <div className='bx--col-md-12 bx--col-lg-12' key={id}>\n            <CardComponent\n              id={id}\n              title={name}\n              text={`${elements.articleText.value.substring(0, 55)}...`}\n              thumbnail={`${baseURL}${elements.thumbnail.value.leadImage.url}`}\n            />\n          </div>\n        );\n      });\n    } else {\n      return <h2>No articles found</h2>;\n    }\n  };\n\n  return (\n    <div className='category'>\n      <HeadlineComponent />\n      <div className='bx--grid bx--grid--full-width category-cards'>\n        <div className='bx--row landing-page__r3'>\n          {fetched ? renderArticles() : <Loading description='Loading' small={false} withOverlay={false} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Category;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { tenantURL, taxonomy } from './constants';\nimport Header from './components/Header/';\nimport Article from './views/Article/';\nimport Category from './views/Category/';\nimport './App.scss';\n\n/**\n * App Component\n * Root of the react app\n */\nfunction App() {\n  const [error, setError] = useState('');\n  const [categories, setCategories] = useState({\n    numFound: 0,\n    documents: []\n  });\n\n  useEffect(() => {\n    (async () => {\n      const categoriesURL = `${tenantURL}/delivery/v1/search?q=*:*&fl=id,name&fq=classification:(category)&fq=path:(%5C/${taxonomy}/*)`;\n      const result = await fetch(categoriesURL);\n\n      result\n        .json()\n        .then(result => setCategories(result))\n        .catch(error => setError(error.message));\n    })();\n  }, []);\n\n  function RenderHeader() {\n    return error ? <h2>Network Error</h2> : <Header categories={categories.documents} />;\n  }\n\n  return (\n    <Router>\n      <RenderHeader />\n      <Switch>\n        <Route exact path='/' render={props => <Category {...props} />}></Route>\n        <Route path='/article/:id' render={() => <Article />}></Route>\n        <Route exact path='/category/:id' render={props => <Category {...props} />}></Route>\n        <Route exact path='/tag/:id' render={props => <Category {...props} />}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}